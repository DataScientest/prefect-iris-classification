version: '3.8'

services:
  prefect-db:
    image: postgres:13
    environment:
      POSTGRES_USER: prefect
      POSTGRES_PASSWORD: prefect
      POSTGRES_DB: prefect
    volumes:
      - prefect_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prefect"]
      interval: 5s
      retries: 5
      start_period: 30s

  mlflow:
    build:
      context: .
      dockerfile: mlflow.Dockerfile
    ports:
      - "5001:5000"
    volumes:
      - mlflow_data:/mlruns
    command: >
      mlflow server 
      --host 0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  prefect-server:
    build:
      context: .
      dockerfile: prefect.Dockerfile
    restart: always
    ports:
      - "4200:4200"
    depends_on:
      prefect-db:
        condition: service_healthy
    environment:
      - PREFECT_API_DATABASE_CONNECTION_URL=postgresql+asyncpg://prefect:prefect@prefect-db:5432/prefect
      - PREFECT_API_URL=http://0.0.0.0:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
    volumes:
      - .:/app
    working_dir: /app
    command: prefect server start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # TODO: Implement the prefect-init service
  # This service should:
  # 1. Use the prefect.Dockerfile
  # 2. Depend on prefect-server being healthy
  # 3. Set the following environment variables:
  #    - PREFECT_API_URL
  #    - GITHUB_TOKEN
  #    - GITHUB_REPOSITORY
  #    - GITHUB_BRANCH
  #    - MLFLOW_TRACKING_URI
  # 4. Mount the current directory to /app
  # 5. Run the following commands in sequence:
  #    - Initialize blocks using init.py
  #    - Create work pool 'ml-pool'
  #    - Create deployment using create_deployment.py
  prefect-init:

  prefect-worker:
    build:
      context: .
      dockerfile: prefect.Dockerfile
    depends_on:
      prefect-server:
        condition: service_healthy
      prefect-init:
        condition: service_completed_successfully
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - .:/app
    working_dir: /app
    command: prefect worker start -p ml-pool

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
    depends_on:
      prefect-server:
        condition: service_healthy
      mlflow:
        condition: service_healthy
      prefect-db:
        condition: service_healthy
    environment:
      - PREFECT_API_URL=http://prefect-server:4200/api
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - GITHUB_TOKEN=${GH_TOKEN}
      - GITHUB_REPOSITORY=${GITHUB_REPOSITORY}
      - GITHUB_BRANCH=${GITHUB_BRANCH}
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - .:/app
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  prefect_postgres_data:
  mlflow_data: